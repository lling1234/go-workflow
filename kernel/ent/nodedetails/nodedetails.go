// Code generated by entc, DO NOT EDIT.

package nodedetails

import (
	"time"
)

const (
	// Label holds the string label denoting the nodedetails type in the database.
	Label = "node_details"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProcInstID holds the string denoting the procinstid field in the database.
	FieldProcInstID = "proc_inst_id"
	// FieldNodeID holds the string denoting the nodeid field in the database.
	FieldNodeID = "node_id"
	// FieldNodeInfo holds the string denoting the nodeinfo field in the database.
	FieldNodeInfo = "node_info"
	// FieldRefuse holds the string denoting the refuse field in the database.
	FieldRefuse = "refuse"
	// FieldPrevID holds the string denoting the previd field in the database.
	FieldPrevID = "prev_id"
	// FieldNextID holds the string denoting the nextid field in the database.
	FieldNextID = "next_id"
	// FieldMode holds the string denoting the mode field in the database.
	FieldMode = "mode"
	// FieldCreateTime holds the string denoting the createtime field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the updatetime field in the database.
	FieldUpdateTime = "update_time"
	// FieldCreateUser holds the string denoting the createuser field in the database.
	FieldCreateUser = "create_user"
	// FieldUpdateUser holds the string denoting the updateuser field in the database.
	FieldUpdateUser = "update_user"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// Table holds the table name of the nodedetails in the database.
	Table = "wflow_node_details"
)

// Columns holds all SQL columns for nodedetails fields.
var Columns = []string{
	FieldID,
	FieldProcInstID,
	FieldNodeID,
	FieldNodeInfo,
	FieldRefuse,
	FieldPrevID,
	FieldNextID,
	FieldMode,
	FieldCreateTime,
	FieldUpdateTime,
	FieldCreateUser,
	FieldUpdateUser,
	FieldVersion,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NodeIDValidator is a validator for the "nodeID" field. It is called by the builders before save.
	NodeIDValidator func(string) error
	// NodeInfoValidator is a validator for the "nodeInfo" field. It is called by the builders before save.
	NodeInfoValidator func(string) error
	// RefuseValidator is a validator for the "refuse" field. It is called by the builders before save.
	RefuseValidator func(string) error
	// PrevIDValidator is a validator for the "prevID" field. It is called by the builders before save.
	PrevIDValidator func(string) error
	// NextIDValidator is a validator for the "nextID" field. It is called by the builders before save.
	NextIDValidator func(string) error
	// DefaultMode holds the default value on creation for the "mode" field.
	DefaultMode string
	// ModeValidator is a validator for the "mode" field. It is called by the builders before save.
	ModeValidator func(string) error
	// DefaultCreateTime holds the default value on creation for the "createTime" field.
	DefaultCreateTime time.Time
	// DefaultUpdateTime holds the default value on creation for the "updateTime" field.
	DefaultUpdateTime time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uint64
)
