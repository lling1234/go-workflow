// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: source/rpc/wflow.proto

package kernel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Nil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Nil) Reset() {
	*x = Nil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nil) ProtoMessage() {}

func (x *Nil) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nil.ProtoReflect.Descriptor instead.
func (*Nil) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{0}
}

type SaveProcDefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code        string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	FormId      uint64 `protobuf:"varint,4,opt,name=formId,proto3" json:"formId,omitempty"`
	FormName    string `protobuf:"bytes,5,opt,name=formName,proto3" json:"formName,omitempty"`
	AppId       uint64 `protobuf:"varint,6,opt,name=appId,proto3" json:"appId,omitempty"`
	AppName     string `protobuf:"bytes,7,opt,name=appName,proto3" json:"appName,omitempty"`
	RemainHours uint64 `protobuf:"varint,8,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	Resource    string `protobuf:"bytes,9,opt,name=resource,proto3" json:"resource,omitempty"`
	Version     uint64 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SaveProcDefReq) Reset() {
	*x = SaveProcDefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProcDefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProcDefReq) ProtoMessage() {}

func (x *SaveProcDefReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProcDefReq.ProtoReflect.Descriptor instead.
func (*SaveProcDefReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{1}
}

func (x *SaveProcDefReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveProcDefReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveProcDefReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SaveProcDefReq) GetFormId() uint64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *SaveProcDefReq) GetFormName() string {
	if x != nil {
		return x.FormName
	}
	return ""
}

func (x *SaveProcDefReq) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *SaveProcDefReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *SaveProcDefReq) GetRemainHours() uint64 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *SaveProcDefReq) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *SaveProcDefReq) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type QueryProcDefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId  uint64 `protobuf:"varint,1,opt,name=formId,proto3" json:"formId,omitempty"`
	AppId   uint64 `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	Version uint64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *QueryProcDefReq) Reset() {
	*x = QueryProcDefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProcDefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProcDefReq) ProtoMessage() {}

func (x *QueryProcDefReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProcDefReq.ProtoReflect.Descriptor instead.
func (*QueryProcDefReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{2}
}

func (x *QueryProcDefReq) GetFormId() uint64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *QueryProcDefReq) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *QueryProcDefReq) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type StartViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId uint64 `protobuf:"varint,1,opt,name=formId,proto3" json:"formId,omitempty"`
	AppId  uint64 `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	DataId uint64 `protobuf:"varint,3,opt,name=dataId,proto3" json:"dataId,omitempty"`
}

func (x *StartViewReq) Reset() {
	*x = StartViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartViewReq) ProtoMessage() {}

func (x *StartViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartViewReq.ProtoReflect.Descriptor instead.
func (*StartViewReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{3}
}

func (x *StartViewReq) GetFormId() uint64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *StartViewReq) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *StartViewReq) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

type StartProcInstReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	FormId      uint64 `protobuf:"varint,2,opt,name=formId,proto3" json:"formId,omitempty"`
	AppId       uint64 `protobuf:"varint,3,opt,name=appId,proto3" json:"appId,omitempty"`
	DataId      uint64 `protobuf:"varint,4,opt,name=dataId,proto3" json:"dataId,omitempty"`
	DefId       uint64 `protobuf:"varint,5,opt,name=defId,proto3" json:"defId,omitempty"`
	Resource    string `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	Notifiers   string `protobuf:"bytes,7,opt,name=notifiers,proto3" json:"notifiers,omitempty"`
	RemainHours uint64 `protobuf:"varint,8,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	FlowType    uint64 `protobuf:"varint,9,opt,name=flowType,proto3" json:"flowType,omitempty"`
}

func (x *StartProcInstReq) Reset() {
	*x = StartProcInstReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartProcInstReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProcInstReq) ProtoMessage() {}

func (x *StartProcInstReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProcInstReq.ProtoReflect.Descriptor instead.
func (*StartProcInstReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{4}
}

func (x *StartProcInstReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StartProcInstReq) GetFormId() uint64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *StartProcInstReq) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *StartProcInstReq) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *StartProcInstReq) GetDefId() uint64 {
	if x != nil {
		return x.DefId
	}
	return 0
}

func (x *StartProcInstReq) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *StartProcInstReq) GetNotifiers() string {
	if x != nil {
		return x.Notifiers
	}
	return ""
}

func (x *StartProcInstReq) GetRemainHours() uint64 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *StartProcInstReq) GetFlowType() uint64 {
	if x != nil {
		return x.FlowType
	}
	return 0
}

type CompleteProcInstReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId  uint64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`
	Result  uint64 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CompleteProcInstReq) Reset() {
	*x = CompleteProcInstReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteProcInstReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteProcInstReq) ProtoMessage() {}

func (x *CompleteProcInstReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteProcInstReq.ProtoReflect.Descriptor instead.
func (*CompleteProcInstReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{5}
}

func (x *CompleteProcInstReq) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *CompleteProcInstReq) GetResult() uint64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CompleteProcInstReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type DataIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId uint64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`
}

func (x *DataIdReq) Reset() {
	*x = DataIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataIdReq) ProtoMessage() {}

func (x *DataIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataIdReq.ProtoReflect.Descriptor instead.
func (*DataIdReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{6}
}

func (x *DataIdReq) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{7}
}

func (x *IdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *IdPageReq) Reset() {
	*x = IdPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdPageReq) ProtoMessage() {}

func (x *IdPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdPageReq.ProtoReflect.Descriptor instead.
func (*IdPageReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{8}
}

func (x *IdPageReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IdPageReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *IdPageReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IdPageReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type PageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *PageReq) Reset() {
	*x = PageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageReq) ProtoMessage() {}

func (x *PageReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageReq.ProtoReflect.Descriptor instead.
func (*PageReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{9}
}

func (x *PageReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PageReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PageReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type OverTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate string `protobuf:"bytes,1,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate   string `protobuf:"bytes,2,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	Offset    int32  `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit     int32  `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Filter    string `protobuf:"bytes,5,opt,name=Filter,proto3" json:"Filter,omitempty"`
}

func (x *OverTimeReq) Reset() {
	*x = OverTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverTimeReq) ProtoMessage() {}

func (x *OverTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverTimeReq.ProtoReflect.Descriptor instead.
func (*OverTimeReq) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{10}
}

func (x *OverTimeReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *OverTimeReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *OverTimeReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OverTimeReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OverTimeReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ProcDefResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code           string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Version        uint64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Resource       string `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	CreateUser     uint64 `protobuf:"varint,6,opt,name=createUser,proto3" json:"createUser,omitempty"`
	CreateUserName string `protobuf:"bytes,7,opt,name=createUserName,proto3" json:"createUserName,omitempty"`
	CreateTime     string `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	TargetId       uint64 `protobuf:"varint,9,opt,name=targetId,proto3" json:"targetId,omitempty"`
	FormId         uint64 `protobuf:"varint,10,opt,name=formId,proto3" json:"formId,omitempty"`
	FormName       string `protobuf:"bytes,11,opt,name=formName,proto3" json:"formName,omitempty"`
	AppId          uint64 `protobuf:"varint,12,opt,name=appId,proto3" json:"appId,omitempty"`
	AppName        string `protobuf:"bytes,13,opt,name=appName,proto3" json:"appName,omitempty"`
	RemainHours    uint64 `protobuf:"varint,14,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	IsActive       uint64 `protobuf:"varint,15,opt,name=isActive,proto3" json:"isActive,omitempty"`
}

func (x *ProcDefResp) Reset() {
	*x = ProcDefResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcDefResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcDefResp) ProtoMessage() {}

func (x *ProcDefResp) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcDefResp.ProtoReflect.Descriptor instead.
func (*ProcDefResp) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{11}
}

func (x *ProcDefResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProcDefResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcDefResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProcDefResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProcDefResp) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ProcDefResp) GetCreateUser() uint64 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *ProcDefResp) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProcDefResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProcDefResp) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ProcDefResp) GetFormId() uint64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *ProcDefResp) GetFormName() string {
	if x != nil {
		return x.FormName
	}
	return ""
}

func (x *ProcDefResp) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ProcDefResp) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ProcDefResp) GetRemainHours() uint64 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *ProcDefResp) GetIsActive() uint64 {
	if x != nil {
		return x.IsActive
	}
	return 0
}

type StartViewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId      uint64 `protobuf:"varint,1,opt,name=formId,proto3" json:"formId,omitempty"`
	AppId       uint64 `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	DefId       uint64 `protobuf:"varint,3,opt,name=defId,proto3" json:"defId,omitempty"`
	DataId      uint64 `protobuf:"varint,4,opt,name=dataId,proto3" json:"dataId,omitempty"`
	Resource    string `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	Notifiers   string `protobuf:"bytes,6,opt,name=notifiers,proto3" json:"notifiers,omitempty"`
	RemainHours uint64 `protobuf:"varint,7,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	FlowType    uint64 `protobuf:"varint,8,opt,name=flowType,proto3" json:"flowType,omitempty"`
}

func (x *StartViewResp) Reset() {
	*x = StartViewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartViewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartViewResp) ProtoMessage() {}

func (x *StartViewResp) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartViewResp.ProtoReflect.Descriptor instead.
func (*StartViewResp) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{12}
}

func (x *StartViewResp) GetFormId() uint64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *StartViewResp) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *StartViewResp) GetDefId() uint64 {
	if x != nil {
		return x.DefId
	}
	return 0
}

func (x *StartViewResp) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *StartViewResp) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *StartViewResp) GetNotifiers() string {
	if x != nil {
		return x.Notifiers
	}
	return ""
}

func (x *StartViewResp) GetRemainHours() uint64 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *StartViewResp) GetFlowType() uint64 {
	if x != nil {
		return x.FlowType
	}
	return 0
}

type ProcInstResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProcDefId      uint64 `protobuf:"varint,2,opt,name=procDefId,proto3" json:"procDefId,omitempty"`
	Title          string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Code           string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	TargetId       uint64 `protobuf:"varint,5,opt,name=targetId,proto3" json:"targetId,omitempty"`
	NodeId         string `protobuf:"bytes,6,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	TaskId         uint64 `protobuf:"varint,7,opt,name=taskId,proto3" json:"taskId,omitempty"`
	CreateTime     string `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	EndTime        string `protobuf:"bytes,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	CreateUser     uint64 `protobuf:"varint,10,opt,name=createUser,proto3" json:"createUser,omitempty"`
	CreateUserName string `protobuf:"bytes,11,opt,name=createUserName,proto3" json:"createUserName,omitempty"`
	IsFinished     uint64 `protobuf:"varint,12,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
	State          uint64 `protobuf:"varint,13,opt,name=state,proto3" json:"state,omitempty"`
	DataId         uint64 `protobuf:"varint,14,opt,name=dataId,proto3" json:"dataId,omitempty"`
	UpdateTime     string `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	RemainHours    uint64 `protobuf:"varint,16,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	FlowType       uint64 `protobuf:"varint,17,opt,name=flowType,proto3" json:"flowType,omitempty"`
}

func (x *ProcInstResp) Reset() {
	*x = ProcInstResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcInstResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcInstResp) ProtoMessage() {}

func (x *ProcInstResp) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcInstResp.ProtoReflect.Descriptor instead.
func (*ProcInstResp) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{13}
}

func (x *ProcInstResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProcInstResp) GetProcDefId() uint64 {
	if x != nil {
		return x.ProcDefId
	}
	return 0
}

func (x *ProcInstResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProcInstResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProcInstResp) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ProcInstResp) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ProcInstResp) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProcInstResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProcInstResp) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ProcInstResp) GetCreateUser() uint64 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *ProcInstResp) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProcInstResp) GetIsFinished() uint64 {
	if x != nil {
		return x.IsFinished
	}
	return 0
}

func (x *ProcInstResp) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ProcInstResp) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *ProcInstResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ProcInstResp) GetRemainHours() uint64 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *ProcInstResp) GetFlowType() uint64 {
	if x != nil {
		return x.FlowType
	}
	return 0
}

type CommonRpcRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//返回数据JSON
	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *CommonRpcRes) Reset() {
	*x = CommonRpcRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRpcRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRpcRes) ProtoMessage() {}

func (x *CommonRpcRes) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRpcRes.ProtoReflect.Descriptor instead.
func (*CommonRpcRes) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{14}
}

func (x *CommonRpcRes) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type CommonDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ids []uint64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CommonDelete) Reset() {
	*x = CommonDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_rpc_wflow_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonDelete) ProtoMessage() {}

func (x *CommonDelete) ProtoReflect() protoreflect.Message {
	mi := &file_source_rpc_wflow_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonDelete.ProtoReflect.Descriptor instead.
func (*CommonDelete) Descriptor() ([]byte, []int) {
	return file_source_rpc_wflow_proto_rawDescGZIP(), []int{15}
}

func (x *CommonDelete) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommonDelete) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_source_rpc_wflow_proto protoreflect.FileDescriptor

var file_source_rpc_wflow_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x1a, 0x18, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x05, 0x0a, 0x03, 0x4e, 0x69,
	0x6c, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65,
	0x66, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x66, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x65, 0x66, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x22, 0x17,
	0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x09, 0x49, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x07, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x0b,
	0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa1, 0x03, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xe3, 0x01,
	0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x65, 0x66, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x65,
	0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xe0, 0x03, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c,
	0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x6c,
	0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x32, 0xaf, 0x05, 0x0a,
	0x05, 0x77, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x63, 0x44, 0x65, 0x66, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x12, 0x28, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x12, 0x0d, 0x2e, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x2e, 0x4e, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71,
	0x1a, 0x0f, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65,
	0x66, 0x12, 0x37, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63,
	0x44, 0x65, 0x66, 0x12, 0x0f, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x64, 0x65, 0x66, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x0e, 0x66, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x12, 0x0d, 0x2e, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x12, 0x31, 0x0a, 0x09,
	0x73, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52,
	0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x4e, 0x69, 0x6c, 0x12,
	0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x2e, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x4e, 0x69,
	0x6c, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x2e, 0x4e, 0x69, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x1b, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x11,
	0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x69,
	0x6e, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12,
	0x11, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x4e, 0x69, 0x6c, 0x12,
	0x2d, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x11,
	0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x0b, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x4e, 0x69, 0x6c, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_source_rpc_wflow_proto_rawDescOnce sync.Once
	file_source_rpc_wflow_proto_rawDescData = file_source_rpc_wflow_proto_rawDesc
)

func file_source_rpc_wflow_proto_rawDescGZIP() []byte {
	file_source_rpc_wflow_proto_rawDescOnce.Do(func() {
		file_source_rpc_wflow_proto_rawDescData = protoimpl.X.CompressGZIP(file_source_rpc_wflow_proto_rawDescData)
	})
	return file_source_rpc_wflow_proto_rawDescData
}

var file_source_rpc_wflow_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_source_rpc_wflow_proto_goTypes = []interface{}{
	(*Nil)(nil),                 // 0: kernel.Nil
	(*SaveProcDefReq)(nil),      // 1: kernel.SaveProcDefReq
	(*QueryProcDefReq)(nil),     // 2: kernel.QueryProcDefReq
	(*StartViewReq)(nil),        // 3: kernel.StartViewReq
	(*StartProcInstReq)(nil),    // 4: kernel.StartProcInstReq
	(*CompleteProcInstReq)(nil), // 5: kernel.CompleteProcInstReq
	(*DataIdReq)(nil),           // 6: kernel.DataIdReq
	(*IdReq)(nil),               // 7: kernel.IdReq
	(*IdPageReq)(nil),           // 8: kernel.IdPageReq
	(*PageReq)(nil),             // 9: kernel.PageReq
	(*OverTimeReq)(nil),         // 10: kernel.OverTimeReq
	(*ProcDefResp)(nil),         // 11: kernel.ProcDefResp
	(*StartViewResp)(nil),       // 12: kernel.StartViewResp
	(*ProcInstResp)(nil),        // 13: kernel.ProcInstResp
	(*CommonRpcRes)(nil),        // 14: kernel.CommonRpcRes
	(*CommonDelete)(nil),        // 15: kernel.CommonDelete
	(*Procdef)(nil),             // 16: kernel.Procdef
	(*ProcdefArray)(nil),        // 17: kernel.ProcdefArray
	(*Procinst)(nil),            // 18: kernel.Procinst
}
var file_source_rpc_wflow_proto_depIdxs = []int32{
	1,  // 0: kernel.wflow.addProcDef:input_type -> kernel.SaveProcDefReq
	7,  // 1: kernel.wflow.delProcDef:input_type -> kernel.IdReq
	1,  // 2: kernel.wflow.updateProcDef:input_type -> kernel.SaveProcDefReq
	9,  // 3: kernel.wflow.findAllProcDef:input_type -> kernel.PageReq
	7,  // 4: kernel.wflow.findOneProcDef:input_type -> kernel.IdReq
	2,  // 5: kernel.wflow.setActive:input_type -> kernel.QueryProcDefReq
	3,  // 6: kernel.wflow.startView:input_type -> kernel.StartViewReq
	4,  // 7: kernel.wflow.startProcInst:input_type -> kernel.StartProcInstReq
	5,  // 8: kernel.wflow.complete:input_type -> kernel.CompleteProcInstReq
	5,  // 9: kernel.wflow.view:input_type -> kernel.CompleteProcInstReq
	6,  // 10: kernel.wflow.findByDataId:input_type -> kernel.DataIdReq
	6,  // 11: kernel.wflow.withdraw:input_type -> kernel.DataIdReq
	6,  // 12: kernel.wflow.delProcInst:input_type -> kernel.DataIdReq
	16, // 13: kernel.wflow.addProcDef:output_type -> kernel.Procdef
	0,  // 14: kernel.wflow.delProcDef:output_type -> kernel.Nil
	16, // 15: kernel.wflow.updateProcDef:output_type -> kernel.Procdef
	17, // 16: kernel.wflow.findAllProcDef:output_type -> kernel.ProcdefArray
	16, // 17: kernel.wflow.findOneProcDef:output_type -> kernel.Procdef
	0,  // 18: kernel.wflow.setActive:output_type -> kernel.Nil
	12, // 19: kernel.wflow.startView:output_type -> kernel.StartViewResp
	0,  // 20: kernel.wflow.startProcInst:output_type -> kernel.Nil
	0,  // 21: kernel.wflow.complete:output_type -> kernel.Nil
	18, // 22: kernel.wflow.view:output_type -> kernel.Procinst
	18, // 23: kernel.wflow.findByDataId:output_type -> kernel.Procinst
	0,  // 24: kernel.wflow.withdraw:output_type -> kernel.Nil
	0,  // 25: kernel.wflow.delProcInst:output_type -> kernel.Nil
	13, // [13:26] is the sub-list for method output_type
	0,  // [0:13] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_source_rpc_wflow_proto_init() }
func file_source_rpc_wflow_proto_init() {
	if File_source_rpc_wflow_proto != nil {
		return
	}
	file_source_rpc_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_source_rpc_wflow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProcDefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProcDefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartProcInstReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteProcInstReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcDefResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartViewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcInstResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRpcRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_rpc_wflow_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_source_rpc_wflow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_source_rpc_wflow_proto_goTypes,
		DependencyIndexes: file_source_rpc_wflow_proto_depIdxs,
		MessageInfos:      file_source_rpc_wflow_proto_msgTypes,
	}.Build()
	File_source_rpc_wflow_proto = out.File
	file_source_rpc_wflow_proto_rawDesc = nil
	file_source_rpc_wflow_proto_goTypes = nil
	file_source_rpc_wflow_proto_depIdxs = nil
}
