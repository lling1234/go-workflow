// Code generated by goctl. DO NOT EDIT!
// Source: act.proto

package server

import (
	"context"

	"act/rpc/internal/logic"
	"act/rpc/internal/svc"
	"act/rpc/types/act"
)

type ActServer struct {
	svcCtx *svc.ServiceContext
	act.UnimplementedActServer
}

func NewActServer(svcCtx *svc.ServiceContext) *ActServer {
	return &ActServer{
		svcCtx: svcCtx,
	}
}

func (s *ActServer) AddProcDef(ctx context.Context, in *act.AddProcDefReq) (*act.ProcDefReply, error) {
	l := logic.NewAddProcDefLogic(ctx, s.svcCtx)
	return l.AddProcDef(in)
}

func (s *ActServer) FindDefByFormId(ctx context.Context, in *act.FindProcDefReq) (*act.ProcDefReply, error) {
	l := logic.NewFindDefByFormIdLogic(ctx, s.svcCtx)
	return l.FindDefByFormId(in)
}

func (s *ActServer) UpdateProcDef(ctx context.Context, in *act.FindProcDefReq) (*act.ProcDefReply, error) {
	l := logic.NewUpdateProcDefLogic(ctx, s.svcCtx)
	return l.UpdateProcDef(in)
}

func (s *ActServer) SetProcDefActive(ctx context.Context, in *act.FindProcDefReq) (*act.Nil, error) {
	l := logic.NewSetProcDefActiveLogic(ctx, s.svcCtx)
	return l.SetProcDefActive(in)
}

func (s *ActServer) DelProcDef(ctx context.Context, in *act.FindProcDefReq) (*act.Nil, error) {
	l := logic.NewDelProcDefLogic(ctx, s.svcCtx)
	return l.DelProcDef(in)
}

func (s *ActServer) Start(ctx context.Context, in *act.StartProcInstReq) (*act.Nil, error) {
	l := logic.NewStartLogic(ctx, s.svcCtx)
	return l.Start(in)
}

func (s *ActServer) CompleteNormal(ctx context.Context, in *act.CompleteNormalProcInstReq) (*act.Nil, error) {
	l := logic.NewCompleteNormalLogic(ctx, s.svcCtx)
	return l.CompleteNormal(in)
}

func (s *ActServer) Withdraw(ctx context.Context, in *act.DataIdReq) (*act.Nil, error) {
	l := logic.NewWithdrawLogic(ctx, s.svcCtx)
	return l.Withdraw(in)
}

func (s *ActServer) DelProcInst(ctx context.Context, in *act.DataIdReq) (*act.Nil, error) {
	l := logic.NewDelProcInstLogic(ctx, s.svcCtx)
	return l.DelProcInst(in)
}

func (s *ActServer) FindProcInstByDataId(ctx context.Context, in *act.DataIdReq) (*act.ProcInstReply, error) {
	l := logic.NewFindProcInstByDataIdLogic(ctx, s.svcCtx)
	return l.FindProcInstByDataId(in)
}

func (s *ActServer) FindMyStart(ctx context.Context, in *act.MyProcInstReq) (*act.ProcInstReply, error) {
	l := logic.NewFindMyStartLogic(ctx, s.svcCtx)
	return l.FindMyStart(in)
}

func (s *ActServer) FindMyApproval(ctx context.Context, in *act.MyProcInstReq) (*act.ProcInstReply, error) {
	l := logic.NewFindMyApprovalLogic(ctx, s.svcCtx)
	return l.FindMyApproval(in)
}

func (s *ActServer) FindMyFinishStart(ctx context.Context, in *act.MyProcInstReq) (*act.ProcInstReply, error) {
	l := logic.NewFindMyFinishStartLogic(ctx, s.svcCtx)
	return l.FindMyFinishStart(in)
}

func (s *ActServer) FindMyFinishApproval(ctx context.Context, in *act.MyProcInstReq) (*act.ProcInstReply, error) {
	l := logic.NewFindMyFinishApprovalLogic(ctx, s.svcCtx)
	return l.FindMyFinishApproval(in)
}

func (s *ActServer) FindOverTime(ctx context.Context, in *act.OverTimeReq) (*act.ProcInstReply, error) {
	l := logic.NewFindOverTimeLogic(ctx, s.svcCtx)
	return l.FindOverTime(in)
}
