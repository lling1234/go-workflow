// Code generated by goctl. DO NOT EDIT!
// Source: act.proto

package actclient

import (
	"context"

	"act/rpc/types/act"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddProcDefReq             = act.AddProcDefReq
	CommonRpcRes              = act.CommonRpcRes
	CompleteNormalProcInstReq = act.CompleteNormalProcInstReq
	DataIdReq                 = act.DataIdReq
	FindProcDefReq            = act.FindProcDefReq
	IdRequest                 = act.IdRequest
	MyProcInstReq             = act.MyProcInstReq
	Nil                       = act.Nil
	OverTimeReq               = act.OverTimeReq
	PageRequest               = act.PageRequest
	ProcDefReply              = act.ProcDefReply
	ProcInstReply             = act.ProcInstReply
	StartProcInstReq          = act.StartProcInstReq

	Act interface {
		AddProcDef(ctx context.Context, in *AddProcDefReq, opts ...grpc.CallOption) (*ProcDefReply, error)
		FindDefByFormId(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*ProcDefReply, error)
		UpdateProcDef(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*ProcDefReply, error)
		SetProcDefActive(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*Nil, error)
		DelProcDef(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*Nil, error)
		Start(ctx context.Context, in *StartProcInstReq, opts ...grpc.CallOption) (*Nil, error)
		CompleteNormal(ctx context.Context, in *CompleteNormalProcInstReq, opts ...grpc.CallOption) (*Nil, error)
		Withdraw(ctx context.Context, in *DataIdReq, opts ...grpc.CallOption) (*Nil, error)
		DelProcInst(ctx context.Context, in *DataIdReq, opts ...grpc.CallOption) (*Nil, error)
		FindProcInstByDataId(ctx context.Context, in *DataIdReq, opts ...grpc.CallOption) (*ProcInstReply, error)
		FindMyStart(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error)
		FindMyApproval(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error)
		FindMyFinishStart(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error)
		FindMyFinishApproval(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error)
		FindOverTime(ctx context.Context, in *OverTimeReq, opts ...grpc.CallOption) (*ProcInstReply, error)
	}

	defaultAct struct {
		cli zrpc.Client
	}
)

func NewAct(cli zrpc.Client) Act {
	return &defaultAct{
		cli: cli,
	}
}

func (m *defaultAct) AddProcDef(ctx context.Context, in *AddProcDefReq, opts ...grpc.CallOption) (*ProcDefReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.AddProcDef(ctx, in, opts...)
}

func (m *defaultAct) FindDefByFormId(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*ProcDefReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.FindDefByFormId(ctx, in, opts...)
}

func (m *defaultAct) UpdateProcDef(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*ProcDefReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.UpdateProcDef(ctx, in, opts...)
}

func (m *defaultAct) SetProcDefActive(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*Nil, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.SetProcDefActive(ctx, in, opts...)
}

func (m *defaultAct) DelProcDef(ctx context.Context, in *FindProcDefReq, opts ...grpc.CallOption) (*Nil, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.DelProcDef(ctx, in, opts...)
}

func (m *defaultAct) Start(ctx context.Context, in *StartProcInstReq, opts ...grpc.CallOption) (*Nil, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.Start(ctx, in, opts...)
}

func (m *defaultAct) CompleteNormal(ctx context.Context, in *CompleteNormalProcInstReq, opts ...grpc.CallOption) (*Nil, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.CompleteNormal(ctx, in, opts...)
}

func (m *defaultAct) Withdraw(ctx context.Context, in *DataIdReq, opts ...grpc.CallOption) (*Nil, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.Withdraw(ctx, in, opts...)
}

func (m *defaultAct) DelProcInst(ctx context.Context, in *DataIdReq, opts ...grpc.CallOption) (*Nil, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.DelProcInst(ctx, in, opts...)
}

func (m *defaultAct) FindProcInstByDataId(ctx context.Context, in *DataIdReq, opts ...grpc.CallOption) (*ProcInstReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.FindProcInstByDataId(ctx, in, opts...)
}

func (m *defaultAct) FindMyStart(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.FindMyStart(ctx, in, opts...)
}

func (m *defaultAct) FindMyApproval(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.FindMyApproval(ctx, in, opts...)
}

func (m *defaultAct) FindMyFinishStart(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.FindMyFinishStart(ctx, in, opts...)
}

func (m *defaultAct) FindMyFinishApproval(ctx context.Context, in *MyProcInstReq, opts ...grpc.CallOption) (*ProcInstReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.FindMyFinishApproval(ctx, in, opts...)
}

func (m *defaultAct) FindOverTime(ctx context.Context, in *OverTimeReq, opts ...grpc.CallOption) (*ProcInstReply, error) {
	client := act.NewActClient(m.cli.Conn())
	return client.FindOverTime(ctx, in, opts...)
}
