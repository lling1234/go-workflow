// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: act.proto

package act

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Nil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Nil) Reset() {
	*x = Nil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nil) ProtoMessage() {}

func (x *Nil) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nil.ProtoReflect.Descriptor instead.
func (*Nil) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{0}
}

type AddProcDefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	FormId      int64  `protobuf:"varint,3,opt,name=formId,proto3" json:"formId,omitempty"`
	FormName    string `protobuf:"bytes,4,opt,name=formName,proto3" json:"formName,omitempty"`
	AppId       int64  `protobuf:"varint,5,opt,name=appId,proto3" json:"appId,omitempty"`
	AppName     string `protobuf:"bytes,6,opt,name=appName,proto3" json:"appName,omitempty"`
	RemainHours int32  `protobuf:"varint,7,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	Resource    string `protobuf:"bytes,8,opt,name=resource,proto3" json:"resource,omitempty"`
	Version     int32  `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	FlowType    int32  `protobuf:"varint,10,opt,name=flowType,proto3" json:"flowType,omitempty"`
}

func (x *AddProcDefReq) Reset() {
	*x = AddProcDefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProcDefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProcDefReq) ProtoMessage() {}

func (x *AddProcDefReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProcDefReq.ProtoReflect.Descriptor instead.
func (*AddProcDefReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{1}
}

func (x *AddProcDefReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddProcDefReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddProcDefReq) GetFormId() int64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *AddProcDefReq) GetFormName() string {
	if x != nil {
		return x.FormName
	}
	return ""
}

func (x *AddProcDefReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *AddProcDefReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AddProcDefReq) GetRemainHours() int32 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *AddProcDefReq) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AddProcDefReq) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AddProcDefReq) GetFlowType() int32 {
	if x != nil {
		return x.FlowType
	}
	return 0
}

type ProcDefReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code           string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Version        int32  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Resource       string `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	CreateUserId   int64  `protobuf:"varint,6,opt,name=createUserId,proto3" json:"createUserId,omitempty"`
	CreateUserName string `protobuf:"bytes,7,opt,name=createUserName,proto3" json:"createUserName,omitempty"`
	CreateTime     string `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	TargetId       int64  `protobuf:"varint,9,opt,name=targetId,proto3" json:"targetId,omitempty"`
	FormId         int64  `protobuf:"varint,10,opt,name=formId,proto3" json:"formId,omitempty"`
	FormName       string `protobuf:"bytes,11,opt,name=formName,proto3" json:"formName,omitempty"`
	AppId          int64  `protobuf:"varint,12,opt,name=appId,proto3" json:"appId,omitempty"`
	AppName        string `protobuf:"bytes,13,opt,name=appName,proto3" json:"appName,omitempty"`
	RemainHours    int32  `protobuf:"varint,14,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	IsDel          int32  `protobuf:"varint,15,opt,name=isDel,proto3" json:"isDel,omitempty"`
	IsActive       int32  `protobuf:"varint,16,opt,name=isActive,proto3" json:"isActive,omitempty"`
}

func (x *ProcDefReply) Reset() {
	*x = ProcDefReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcDefReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcDefReply) ProtoMessage() {}

func (x *ProcDefReply) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcDefReply.ProtoReflect.Descriptor instead.
func (*ProcDefReply) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{2}
}

func (x *ProcDefReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProcDefReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcDefReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProcDefReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProcDefReply) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ProcDefReply) GetCreateUserId() int64 {
	if x != nil {
		return x.CreateUserId
	}
	return 0
}

func (x *ProcDefReply) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProcDefReply) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProcDefReply) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ProcDefReply) GetFormId() int64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *ProcDefReply) GetFormName() string {
	if x != nil {
		return x.FormName
	}
	return ""
}

func (x *ProcDefReply) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ProcDefReply) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ProcDefReply) GetRemainHours() int32 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *ProcDefReply) GetIsDel() int32 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *ProcDefReply) GetIsActive() int32 {
	if x != nil {
		return x.IsActive
	}
	return 0
}

type StartProcInstReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId      int64  `protobuf:"varint,1,opt,name=formId,proto3" json:"formId,omitempty"`
	AppId       int64  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	DefId       int64  `protobuf:"varint,3,opt,name=defId,proto3" json:"defId,omitempty"`
	RemainHours int32  `protobuf:"varint,4,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	DataId      int64  `protobuf:"varint,6,opt,name=dataId,proto3" json:"dataId,omitempty"`
	Resource    string `protobuf:"bytes,7,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *StartProcInstReq) Reset() {
	*x = StartProcInstReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartProcInstReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProcInstReq) ProtoMessage() {}

func (x *StartProcInstReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProcInstReq.ProtoReflect.Descriptor instead.
func (*StartProcInstReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{3}
}

func (x *StartProcInstReq) GetFormId() int64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *StartProcInstReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *StartProcInstReq) GetDefId() int64 {
	if x != nil {
		return x.DefId
	}
	return 0
}

func (x *StartProcInstReq) GetRemainHours() int32 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *StartProcInstReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StartProcInstReq) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *StartProcInstReq) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type CompleteNormalProcInstReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstId  int64  `protobuf:"varint,1,opt,name=instId,proto3" json:"instId,omitempty"`
	DataId  int64  `protobuf:"varint,2,opt,name=dataId,proto3" json:"dataId,omitempty"`
	Result  int32  `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Comment string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CompleteNormalProcInstReq) Reset() {
	*x = CompleteNormalProcInstReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteNormalProcInstReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteNormalProcInstReq) ProtoMessage() {}

func (x *CompleteNormalProcInstReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteNormalProcInstReq.ProtoReflect.Descriptor instead.
func (*CompleteNormalProcInstReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{4}
}

func (x *CompleteNormalProcInstReq) GetInstId() int64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *CompleteNormalProcInstReq) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *CompleteNormalProcInstReq) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CompleteNormalProcInstReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type FindProcDefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId      int64  `protobuf:"varint,1,opt,name=formId,proto3" json:"formId,omitempty"`
	AppId       int64  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	Version     int32  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	IsActive    int32  `protobuf:"varint,4,opt,name=isActive,proto3" json:"isActive,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Code        string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	RemainHours int32  `protobuf:"varint,7,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	Resource    string `protobuf:"bytes,8,opt,name=resource,proto3" json:"resource,omitempty"`
	FlowType    int32  `protobuf:"varint,9,opt,name=flowType,proto3" json:"flowType,omitempty"`
}

func (x *FindProcDefReq) Reset() {
	*x = FindProcDefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProcDefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProcDefReq) ProtoMessage() {}

func (x *FindProcDefReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProcDefReq.ProtoReflect.Descriptor instead.
func (*FindProcDefReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{5}
}

func (x *FindProcDefReq) GetFormId() int64 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *FindProcDefReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *FindProcDefReq) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FindProcDefReq) GetIsActive() int32 {
	if x != nil {
		return x.IsActive
	}
	return 0
}

func (x *FindProcDefReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindProcDefReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FindProcDefReq) GetRemainHours() int32 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *FindProcDefReq) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *FindProcDefReq) GetFlowType() int32 {
	if x != nil {
		return x.FlowType
	}
	return 0
}

type ProcInstReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProcDefId     int64  `protobuf:"varint,2,opt,name=procDefId,proto3" json:"procDefId,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Code          string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	TargetId      int64  `protobuf:"varint,5,opt,name=targetId,proto3" json:"targetId,omitempty"`
	NodeId        string `protobuf:"bytes,6,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	TaskId        int64  `protobuf:"varint,7,opt,name=taskId,proto3" json:"taskId,omitempty"`
	StartTime     string `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string `protobuf:"bytes,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	StartUserId   int64  `protobuf:"varint,10,opt,name=startUserId,proto3" json:"startUserId,omitempty"`
	StartUserName string `protobuf:"bytes,11,opt,name=startUserName,proto3" json:"startUserName,omitempty"`
	IsFinished    int32  `protobuf:"varint,12,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
	State         int32  `protobuf:"varint,13,opt,name=state,proto3" json:"state,omitempty"`
	DataId        int64  `protobuf:"varint,14,opt,name=dataId,proto3" json:"dataId,omitempty"`
	IsDel         int32  `protobuf:"varint,15,opt,name=isDel,proto3" json:"isDel,omitempty"`
	CreateTime    string `protobuf:"bytes,16,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    string `protobuf:"bytes,17,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	RemainHours   int32  `protobuf:"varint,18,opt,name=remainHours,proto3" json:"remainHours,omitempty"`
	FlowType      int32  `protobuf:"varint,19,opt,name=flowType,proto3" json:"flowType,omitempty"`
}

func (x *ProcInstReply) Reset() {
	*x = ProcInstReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcInstReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcInstReply) ProtoMessage() {}

func (x *ProcInstReply) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcInstReply.ProtoReflect.Descriptor instead.
func (*ProcInstReply) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{6}
}

func (x *ProcInstReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProcInstReply) GetProcDefId() int64 {
	if x != nil {
		return x.ProcDefId
	}
	return 0
}

func (x *ProcInstReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProcInstReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProcInstReply) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ProcInstReply) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ProcInstReply) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProcInstReply) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ProcInstReply) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ProcInstReply) GetStartUserId() int64 {
	if x != nil {
		return x.StartUserId
	}
	return 0
}

func (x *ProcInstReply) GetStartUserName() string {
	if x != nil {
		return x.StartUserName
	}
	return ""
}

func (x *ProcInstReply) GetIsFinished() int32 {
	if x != nil {
		return x.IsFinished
	}
	return 0
}

func (x *ProcInstReply) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ProcInstReply) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *ProcInstReply) GetIsDel() int32 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *ProcInstReply) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProcInstReply) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ProcInstReply) GetRemainHours() int32 {
	if x != nil {
		return x.RemainHours
	}
	return 0
}

func (x *ProcInstReply) GetFlowType() int32 {
	if x != nil {
		return x.FlowType
	}
	return 0
}

type DataIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`
}

func (x *DataIdReq) Reset() {
	*x = DataIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataIdReq) ProtoMessage() {}

func (x *DataIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataIdReq.ProtoReflect.Descriptor instead.
func (*DataIdReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{7}
}

func (x *DataIdReq) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

type MyProcInstReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFinish int32        `protobuf:"varint,1,opt,name=isFinish,proto3" json:"isFinish,omitempty"`
	Page     *PageRequest `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *MyProcInstReq) Reset() {
	*x = MyProcInstReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyProcInstReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyProcInstReq) ProtoMessage() {}

func (x *MyProcInstReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyProcInstReq.ProtoReflect.Descriptor instead.
func (*MyProcInstReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{8}
}

func (x *MyProcInstReq) GetIsFinish() int32 {
	if x != nil {
		return x.IsFinish
	}
	return 0
}

func (x *MyProcInstReq) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type OverTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate string       `protobuf:"bytes,1,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   string       `protobuf:"bytes,2,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Page      *PageRequest `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *OverTimeReq) Reset() {
	*x = OverTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverTimeReq) ProtoMessage() {}

func (x *OverTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverTimeReq.ProtoReflect.Descriptor instead.
func (*OverTimeReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{9}
}

func (x *OverTimeReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *OverTimeReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *OverTimeReq) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type CommonRpcRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//返回数据JSON
	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *CommonRpcRes) Reset() {
	*x = CommonRpcRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRpcRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRpcRes) ProtoMessage() {}

func (x *CommonRpcRes) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRpcRes.ProtoReflect.Descriptor instead.
func (*CommonRpcRes) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{10}
}

func (x *CommonRpcRes) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type PageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{11}
}

func (x *PageRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PageRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PageRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{12}
}

func (x *IdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IdRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *IdRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IdRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

var File_act_proto protoreflect.FileDescriptor

var file_act_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x63, 0x74,
	0x22, 0x05, 0x0a, 0x03, 0x4e, 0x69, 0x6c, 0x22, 0x8f, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x72,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x72,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbc, 0x03, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x65, 0x66, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x65, 0x66, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7d, 0x0a,
	0x19, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xf6, 0x01, 0x0a,
	0x0e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6c, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x04, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x44,
	0x65, 0x66, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x44, 0x65, 0x66, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x0d, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x0b, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x74,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x09, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x32, 0xa3,
	0x06, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x63, 0x44, 0x65, 0x66, 0x12, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x0f, 0x66,
	0x69, 0x6e, 0x64, 0x44, 0x65, 0x66, 0x42, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x13,
	0x2e, 0x61, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65,
	0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x12, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61,
	0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x31, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x63, 0x44, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x08, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4e,
	0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x66,
	0x12, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x44,
	0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x08, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4e, 0x69, 0x6c, 0x12,
	0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x08, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4e, 0x69, 0x6c, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x1e, 0x2e, 0x61, 0x63,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x08, 0x2e, 0x61, 0x63,
	0x74, 0x2e, 0x4e, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x12, 0x0e, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x08, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4e, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x61, 0x63, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x08, 0x2e, 0x61, 0x63, 0x74,
	0x2e, 0x4e, 0x69, 0x6c, 0x12, 0x3a, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63,
	0x49, 0x6e, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x0e, 0x2e, 0x61,
	0x63, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61,
	0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x64, 0x4d, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x12, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64, 0x4d,
	0x79, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x2e,
	0x4d, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x61, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3b, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x64, 0x4d, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4d, 0x79, 0x50,
	0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e,
	0x0a, 0x14, 0x66, 0x69, 0x6e, 0x64, 0x4d, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4d, 0x79, 0x50,
	0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34,
	0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10,
	0x2e, 0x61, 0x63, 0x74, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x63, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_act_proto_rawDescOnce sync.Once
	file_act_proto_rawDescData = file_act_proto_rawDesc
)

func file_act_proto_rawDescGZIP() []byte {
	file_act_proto_rawDescOnce.Do(func() {
		file_act_proto_rawDescData = protoimpl.X.CompressGZIP(file_act_proto_rawDescData)
	})
	return file_act_proto_rawDescData
}

var file_act_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_act_proto_goTypes = []interface{}{
	(*Nil)(nil),                       // 0: act.Nil
	(*AddProcDefReq)(nil),             // 1: act.AddProcDefReq
	(*ProcDefReply)(nil),              // 2: act.ProcDefReply
	(*StartProcInstReq)(nil),          // 3: act.StartProcInstReq
	(*CompleteNormalProcInstReq)(nil), // 4: act.CompleteNormalProcInstReq
	(*FindProcDefReq)(nil),            // 5: act.FindProcDefReq
	(*ProcInstReply)(nil),             // 6: act.ProcInstReply
	(*DataIdReq)(nil),                 // 7: act.DataIdReq
	(*MyProcInstReq)(nil),             // 8: act.MyProcInstReq
	(*OverTimeReq)(nil),               // 9: act.OverTimeReq
	(*CommonRpcRes)(nil),              // 10: act.CommonRpcRes
	(*PageRequest)(nil),               // 11: act.PageRequest
	(*IdRequest)(nil),                 // 12: act.IdRequest
}
var file_act_proto_depIdxs = []int32{
	11, // 0: act.MyProcInstReq.page:type_name -> act.PageRequest
	11, // 1: act.OverTimeReq.page:type_name -> act.PageRequest
	1,  // 2: act.act.addProcDef:input_type -> act.AddProcDefReq
	5,  // 3: act.act.findDefByFormId:input_type -> act.FindProcDefReq
	5,  // 4: act.act.updateProcDef:input_type -> act.FindProcDefReq
	5,  // 5: act.act.setProcDefActive:input_type -> act.FindProcDefReq
	5,  // 6: act.act.delProcDef:input_type -> act.FindProcDefReq
	3,  // 7: act.act.start:input_type -> act.StartProcInstReq
	4,  // 8: act.act.completeNormal:input_type -> act.CompleteNormalProcInstReq
	7,  // 9: act.act.withdraw:input_type -> act.DataIdReq
	7,  // 10: act.act.delProcInst:input_type -> act.DataIdReq
	7,  // 11: act.act.findProcInstByDataId:input_type -> act.DataIdReq
	8,  // 12: act.act.findMyStart:input_type -> act.MyProcInstReq
	8,  // 13: act.act.findMyApproval:input_type -> act.MyProcInstReq
	8,  // 14: act.act.findMyFinishStart:input_type -> act.MyProcInstReq
	8,  // 15: act.act.findMyFinishApproval:input_type -> act.MyProcInstReq
	9,  // 16: act.act.findOverTime:input_type -> act.OverTimeReq
	2,  // 17: act.act.addProcDef:output_type -> act.ProcDefReply
	2,  // 18: act.act.findDefByFormId:output_type -> act.ProcDefReply
	2,  // 19: act.act.updateProcDef:output_type -> act.ProcDefReply
	0,  // 20: act.act.setProcDefActive:output_type -> act.Nil
	0,  // 21: act.act.delProcDef:output_type -> act.Nil
	0,  // 22: act.act.start:output_type -> act.Nil
	0,  // 23: act.act.completeNormal:output_type -> act.Nil
	0,  // 24: act.act.withdraw:output_type -> act.Nil
	0,  // 25: act.act.delProcInst:output_type -> act.Nil
	6,  // 26: act.act.findProcInstByDataId:output_type -> act.ProcInstReply
	6,  // 27: act.act.findMyStart:output_type -> act.ProcInstReply
	6,  // 28: act.act.findMyApproval:output_type -> act.ProcInstReply
	6,  // 29: act.act.findMyFinishStart:output_type -> act.ProcInstReply
	6,  // 30: act.act.findMyFinishApproval:output_type -> act.ProcInstReply
	6,  // 31: act.act.findOverTime:output_type -> act.ProcInstReply
	17, // [17:32] is the sub-list for method output_type
	2,  // [2:17] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_act_proto_init() }
func file_act_proto_init() {
	if File_act_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_act_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProcDefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcDefReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartProcInstReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteNormalProcInstReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindProcDefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcInstReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyProcInstReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRpcRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_act_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_act_proto_goTypes,
		DependencyIndexes: file_act_proto_depIdxs,
		MessageInfos:      file_act_proto_msgTypes,
	}.Build()
	File_act_proto = out.File
	file_act_proto_rawDesc = nil
	file_act_proto_goTypes = nil
	file_act_proto_depIdxs = nil
}
