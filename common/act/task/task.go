// Code generated by ent, DO NOT EDIT.

package task

import (
	"time"
)

const (
	// Label holds the string label denoting the task type in the database.
	Label = "task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNodeID holds the string denoting the node_id field in the database.
	FieldNodeID = "node_id"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldStep holds the string denoting the step field in the database.
	FieldStep = "step"
	// FieldProcInstID holds the string denoting the proc_inst_id field in the database.
	FieldProcInstID = "proc_inst_id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldClaimTime holds the string denoting the claim_time field in the database.
	FieldClaimTime = "claim_time"
	// FieldMemberApprover holds the string denoting the member_approver field in the database.
	FieldMemberApprover = "member_approver"
	// FieldAgreeApprover holds the string denoting the agree_approver field in the database.
	FieldAgreeApprover = "agree_approver"
	// FieldIsFinished holds the string denoting the is_finished field in the database.
	FieldIsFinished = "is_finished"
	// FieldMode holds the string denoting the mode field in the database.
	FieldMode = "mode"
	// FieldIsDel holds the string denoting the is_del field in the database.
	FieldIsDel = "is_del"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// Table holds the table name of the task in the database.
	Table = "act_task"
)

// Columns holds all SQL columns for task fields.
var Columns = []string{
	FieldID,
	FieldNodeID,
	FieldLevel,
	FieldStep,
	FieldProcInstID,
	FieldCreateTime,
	FieldClaimTime,
	FieldMemberApprover,
	FieldAgreeApprover,
	FieldIsFinished,
	FieldMode,
	FieldIsDel,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NodeIDValidator is a validator for the "node_id" field. It is called by the builders before save.
	NodeIDValidator func(string) error
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime time.Time
	// MemberApproverValidator is a validator for the "member_approver" field. It is called by the builders before save.
	MemberApproverValidator func(string) error
	// AgreeApproverValidator is a validator for the "agree_approver" field. It is called by the builders before save.
	AgreeApproverValidator func(string) error
	// DefaultIsFinished holds the default value on creation for the "is_finished" field.
	DefaultIsFinished int32
	// DefaultMode holds the default value on creation for the "mode" field.
	DefaultMode string
	// DefaultIsDel holds the default value on creation for the "is_del" field.
	DefaultIsDel int32
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime time.Time
)
