// Code generated by ent, DO NOT EDIT.

package identitylink

import (
	"time"
)

const (
	// Label holds the string label denoting the identitylink type in the database.
	Label = "identity_link"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldUserName holds the string denoting the user_name field in the database.
	FieldUserName = "user_name"
	// FieldStep holds the string denoting the step field in the database.
	FieldStep = "step"
	// FieldProcInstID holds the string denoting the proc_inst_id field in the database.
	FieldProcInstID = "proc_inst_id"
	// FieldTargetID holds the string denoting the target_id field in the database.
	FieldTargetID = "target_id"
	// FieldComment holds the string denoting the comment field in the database.
	FieldComment = "comment"
	// FieldTaskID holds the string denoting the task_id field in the database.
	FieldTaskID = "task_id"
	// FieldResult holds the string denoting the result field in the database.
	FieldResult = "result"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldIsDel holds the string denoting the is_del field in the database.
	FieldIsDel = "is_del"
	// FieldIsDeal holds the string denoting the is_deal field in the database.
	FieldIsDeal = "is_deal"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// Table holds the table name of the identitylink in the database.
	Table = "act_identity_link"
)

// Columns holds all SQL columns for identitylink fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldUserName,
	FieldStep,
	FieldProcInstID,
	FieldTargetID,
	FieldComment,
	FieldTaskID,
	FieldResult,
	FieldCreateTime,
	FieldIsDel,
	FieldIsDeal,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserNameValidator is a validator for the "user_name" field. It is called by the builders before save.
	UserNameValidator func(string) error
	// CommentValidator is a validator for the "comment" field. It is called by the builders before save.
	CommentValidator func(string) error
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime time.Time
	// DefaultIsDel holds the default value on creation for the "is_del" field.
	DefaultIsDel int8
	// DefaultIsDeal holds the default value on creation for the "is_deal" field.
	DefaultIsDeal int8
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime time.Time
)
